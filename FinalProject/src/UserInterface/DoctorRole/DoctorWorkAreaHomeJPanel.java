/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorRole;

import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.LabTestWorkRequest;
import Business.WorkRequest.PrescribeMedsWorkRequest;
import Business.WorkRequest.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Varada
 */
public class DoctorWorkAreaHomeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorWorkAreaHomeJPanel
     */
    JPanel jpanel;
    Organization organization;
    UserAccount account;
     DefaultTableModel model;
    public DoctorWorkAreaHomeJPanel(JPanel jPanel2, Organization organization, UserAccount account) {
        initComponents();
        this.jpanel = jPanel2;
        this.organization = organization;
        this.account = account;
        populateWorkRequests();
        populateAccountRequests();
    }
    
    public void populateWorkRequests(){
        model = (DefaultTableModel)searchPatientTbl.getModel();
        model.setRowCount(0);
        
        for(WorkRequest request: organization.getWorkQueue().getWorkRequestList()){
            Object []row = new Object[3];
            row[0] = request;
            row[1] = request.getHomeless().getFirstName()+ " " + request.getHomeless().getLastName();
            row[2] = request.getMessage();
            model.addRow(row);
        }
    }
     public void filter(String query)
    {
       
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        searchPatientTbl.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
    public void populateAccountRequests(){
        DefaultTableModel model = (DefaultTableModel)statusTbl.getModel();
        model.setRowCount(0);
        
        for(WorkRequest request: account.getWorkQueue().getWorkRequestList()){
            Object []row = new Object[3];
            
            if(request instanceof PrescribeMedsWorkRequest){
                
                PrescribeMedsWorkRequest medRequest = (PrescribeMedsWorkRequest) request;
                
                row[0] = medRequest;
                row[1] = medRequest.getHomeless().getFirstName()+medRequest.getHomeless().getLastName();
                row[2] = medRequest.getTestStatus();
            }
            else if(request instanceof LabTestWorkRequest){
                LabTestWorkRequest labRequest = (LabTestWorkRequest) request;
                row[0] = request;
                row[1] = labRequest.getHomeless().getFirstName()+labRequest.getHomeless().getLastName();
                row[2] = labRequest.getTestStatus();
            }
            
            model.addRow(row);
        }
    }
    
    public WorkRequest getSelectedPatient()
    {
        if(searchPatientTbl.getSelectedRow()<0)
        {
         JOptionPane.showMessageDialog(null, "Please select a record");
            return null;
        }
        
        else
            return (WorkRequest)searchPatientTbl.getValueAt(searchPatientTbl.getSelectedRow(), 0);
    }
    
    public LabTestWorkRequest getLabTestRequest(){
        if(statusTbl.getSelectedRow()<0){
            return null;
        }
        return (LabTestWorkRequest)statusTbl.getValueAt(statusTbl.getSelectedRow(), 0);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchPatientTbl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        statusTbl = new javax.swing.JTable();

        setBackground(new java.awt.Color(120, 168, 252));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Doctor Role Work Area");

        searchPatientTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient ID", "Patient Name", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(searchPatientTbl);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Search by Name:");

        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        statusTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient ID", "Patient Name", "Request Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(statusTbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(31, 31, 31)
                                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jLabel1)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
         String query = txtsearch.getText().toLowerCase();
        filter(query);
    }//GEN-LAST:event_txtsearchKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable searchPatientTbl;
    private javax.swing.JTable statusTbl;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
