/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PharmacistRole;

import Business.Drug.Drug;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.SupplyDrugsWorkRequest;
import Business.WorkRequest.WorkRequest;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author amans
 */
public class PharmacistHomeJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PharmacistHomeJPanel
     */
    JPanel jpanel;
    UserAccount account;
    HospitalEnterprise enterprise;
    EcoSystem system;
    public PharmacistHomeJPanel(JPanel jpanel, UserAccount account, HospitalEnterprise enterprise, EcoSystem system) {
        initComponents();
        this.jpanel = jpanel;
        this.account = account;
        this.enterprise = enterprise;
        this.system = system;
        populateRequestsTable();
    }

    private void populateRequestsTable(){
        DefaultTableModel model = (DefaultTableModel)medReqTable.getModel();
        model.setRowCount(0);
        Object row[] = new Object[4];
        for(Network network: system.getNetworkList()){
            for(Enterprise ent: network.getEnterpriseDirectory().getEnterpriseList()){
                if(this.enterprise == ent){
                    for(WorkRequest request: ent.getWorkQueue().getWorkRequestList()){
                        if(request instanceof SupplyDrugsWorkRequest){
                            SupplyDrugsWorkRequest supply = (SupplyDrugsWorkRequest)request;
                            row[0] = supply;
                            row[1] = supply.getSender();
                            row[2] = supply.getDrug().getName();
                            row[3] = supply.getQuantity();
                            model.addRow(row);
                        }
                    }
                    break;
                }
            }
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        medReqTable = new javax.swing.JTable();
        quantityTxtField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        dispatchBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(120, 168, 252));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        medReqTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Id", "Enterprise Name", "Drug Name", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(medReqTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 57, 594, 280));
        add(quantityTxtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(354, 377, 162, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Quantity");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(239, 378, -1, -1));

        dispatchBtn.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        dispatchBtn.setText("Dispatch");
        dispatchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispatchBtnActionPerformed(evt);
            }
        });
        add(dispatchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(588, 374, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void dispatchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispatchBtnActionPerformed
        // TODO add your handling code here:
        int quantity = Integer.parseInt(quantityTxtField.getText());
        
        SupplyDrugsWorkRequest supply = (SupplyDrugsWorkRequest)medReqTable.getValueAt(medReqTable.getSelectedRow(),0);
         Calendar c = Calendar.getInstance();
            c.setTime(new Date());
            c.add(Calendar.DATE, 10);
            supply.getDrug().setDate(c.getTime());
        if(quantity<supply.getQuantity()){
            supply.setQuantity(supply.getQuantity()-quantity);
            supply.getDrug().setQuantity(supply.getDrug().getQuantity()+quantity);
            populateRequestsTable();
        }else if(quantity>= supply.getQuantity()){
            for(Network network: system.getNetworkList()){
                for(Enterprise ent: network.getEnterpriseDirectory().getEnterpriseList()){
                    if(this.enterprise == ent){
                        ent.getWorkQueue().getWorkRequestList().remove(supply);
                        supply.getDrug().setQuantity(supply.getDrug().getQuantity()+quantity);
                        populateRequestsTable();
                    }
                }
            }
        }
        for(Network network: system.getNetworkList()){
                for(Enterprise ent: network.getEnterpriseDirectory().getEnterpriseList()){
                    if(supply.getEnterprise() == ent){
                        supply.getEnterprise().getDrugList().put(supply.getDrug().getId(), supply.getDrug());
                        for(WorkRequest request: supply.getSender().getWorkQueue().getWorkRequestList()){
                            if(supply == (SupplyDrugsWorkRequest)request){
                                SupplyDrugsWorkRequest req = (SupplyDrugsWorkRequest)request;
                                req.setTestStatus(WorkRequest.WorkStatusType.Completed.getValue());
                                int index = req.getSender().getWorkQueue().getWorkRequestList().indexOf(req);
                                req.getSender().getWorkQueue().getWorkRequestList().set(index, req);
                            }
                        }
                        
                    }
                }
        }
    }//GEN-LAST:event_dispatchBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dispatchBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable medReqTable;
    private javax.swing.JTextField quantityTxtField;
    // End of variables declaration//GEN-END:variables
}
